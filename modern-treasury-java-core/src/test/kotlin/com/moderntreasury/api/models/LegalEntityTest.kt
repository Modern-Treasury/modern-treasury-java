// File generated from our OpenAPI spec by Stainless.

package com.moderntreasury.api.models

import java.time.LocalDate
import java.time.OffsetDateTime
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

class LegalEntityTest {

    @Test
    fun createLegalEntity() {
        val legalEntity =
            LegalEntity.builder()
                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                .addresses(
                    listOf(
                        LegalEntity.LegalEntityAddress.builder()
                            .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                            .addressTypes(
                                listOf(LegalEntity.LegalEntityAddress.AddressType.BUSINESS)
                            )
                            .country("string")
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .line1("string")
                            .line2("string")
                            .liveMode(true)
                            .locality("string")
                            .object_("string")
                            .postalCode("string")
                            .region("string")
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                )
                .businessName("string")
                .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .dateFormed(LocalDate.parse("2019-12-27"))
                .dateOfBirth(LocalDate.parse("2019-12-27"))
                .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .doingBusinessAsNames(listOf("string"))
                .email("string")
                .firstName("string")
                .identifications(
                    listOf(
                        LegalEntity.Identification.builder()
                            .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .idType(LegalEntity.Identification.IdType.AR_CUIL)
                            .issuingCountry("string")
                            .liveMode(true)
                            .object_("string")
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                )
                .lastName("string")
                .legalEntityAssociations(
                    listOf(
                        LegalEntityAssociation.builder()
                            .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                            .associatedLegalEntity(
                                LegalEntityAssociation.AssociatedLegalEntity.builder()
                                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                    .addresses(
                                        listOf(
                                            LegalEntityAssociation.AssociatedLegalEntity
                                                .LegalEntityAddress
                                                .builder()
                                                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                                .addressTypes(
                                                    listOf(
                                                        LegalEntityAssociation.AssociatedLegalEntity
                                                            .LegalEntityAddress
                                                            .AddressType
                                                            .BUSINESS
                                                    )
                                                )
                                                .country("string")
                                                .createdAt(
                                                    OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                                )
                                                .discardedAt(
                                                    OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                                )
                                                .line1("string")
                                                .line2("string")
                                                .liveMode(true)
                                                .locality("string")
                                                .object_("string")
                                                .postalCode("string")
                                                .region("string")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                                )
                                                .build()
                                        )
                                    )
                                    .businessName("string")
                                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .dateFormed(LocalDate.parse("2019-12-27"))
                                    .dateOfBirth(LocalDate.parse("2019-12-27"))
                                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .doingBusinessAsNames(listOf("string"))
                                    .email("string")
                                    .firstName("string")
                                    .identifications(
                                        listOf(
                                            LegalEntityAssociation.AssociatedLegalEntity
                                                .Identification
                                                .builder()
                                                .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                                .createdAt(
                                                    OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                                )
                                                .discardedAt(
                                                    OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                                )
                                                .idType(
                                                    LegalEntityAssociation.AssociatedLegalEntity
                                                        .Identification
                                                        .IdType
                                                        .AR_CUIL
                                                )
                                                .issuingCountry("string")
                                                .liveMode(true)
                                                .object_("string")
                                                .updatedAt(
                                                    OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                                )
                                                .build()
                                        )
                                    )
                                    .lastName("string")
                                    .legalEntityType(
                                        LegalEntityAssociation.AssociatedLegalEntity.LegalEntityType
                                            .BUSINESS
                                    )
                                    .legalStructure(
                                        LegalEntityAssociation.AssociatedLegalEntity.LegalStructure
                                            .CORPORATION
                                    )
                                    .liveMode(true)
                                    .metadata(
                                        LegalEntityAssociation.AssociatedLegalEntity.Metadata
                                            .builder()
                                            .build()
                                    )
                                    .object_("string")
                                    .phoneNumbers(
                                        listOf(
                                            LegalEntityAssociation.AssociatedLegalEntity.PhoneNumber
                                                .builder()
                                                .phoneNumber("string")
                                                .build()
                                        )
                                    )
                                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                    .website("string")
                                    .build()
                            )
                            .associatorLegalEntityId("string")
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .liveMode(true)
                            .object_("string")
                            .ownershipPercentage(123L)
                            .relationshipTypes(
                                listOf(LegalEntityAssociation.RelationshipType.BENEFICIAL_OWNER)
                            )
                            .title("string")
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .build()
                    )
                )
                .legalEntityType(LegalEntity.LegalEntityType.BUSINESS)
                .legalStructure(LegalEntity.LegalStructure.CORPORATION)
                .liveMode(true)
                .metadata(LegalEntity.Metadata.builder().build())
                .object_("string")
                .phoneNumbers(
                    listOf(LegalEntity.PhoneNumber.builder().phoneNumber("string").build())
                )
                .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                .website("string")
                .build()
        assertThat(legalEntity).isNotNull
        assertThat(legalEntity.id()).contains("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
        assertThat(legalEntity.addresses().get())
            .containsExactly(
                LegalEntity.LegalEntityAddress.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .addressTypes(listOf(LegalEntity.LegalEntityAddress.AddressType.BUSINESS))
                    .country("string")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .line1("string")
                    .line2("string")
                    .liveMode(true)
                    .locality("string")
                    .object_("string")
                    .postalCode("string")
                    .region("string")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.businessName()).contains("string")
        assertThat(legalEntity.createdAt())
            .contains(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(legalEntity.dateFormed()).contains(LocalDate.parse("2019-12-27"))
        assertThat(legalEntity.dateOfBirth()).contains(LocalDate.parse("2019-12-27"))
        assertThat(legalEntity.discardedAt())
            .contains(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(legalEntity.doingBusinessAsNames().get()).containsExactly("string")
        assertThat(legalEntity.email()).contains("string")
        assertThat(legalEntity.firstName()).contains("string")
        assertThat(legalEntity.identifications().get())
            .containsExactly(
                LegalEntity.Identification.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .idType(LegalEntity.Identification.IdType.AR_CUIL)
                    .issuingCountry("string")
                    .liveMode(true)
                    .object_("string")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.lastName()).contains("string")
        assertThat(legalEntity.legalEntityAssociations().get())
            .containsExactly(
                LegalEntityAssociation.builder()
                    .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                    .associatedLegalEntity(
                        LegalEntityAssociation.AssociatedLegalEntity.builder()
                            .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                            .addresses(
                                listOf(
                                    LegalEntityAssociation.AssociatedLegalEntity.LegalEntityAddress
                                        .builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .addressTypes(
                                            listOf(
                                                LegalEntityAssociation.AssociatedLegalEntity
                                                    .LegalEntityAddress
                                                    .AddressType
                                                    .BUSINESS
                                            )
                                        )
                                        .country("string")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .line1("string")
                                        .line2("string")
                                        .liveMode(true)
                                        .locality("string")
                                        .object_("string")
                                        .postalCode("string")
                                        .region("string")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                            )
                            .businessName("string")
                            .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .dateFormed(LocalDate.parse("2019-12-27"))
                            .dateOfBirth(LocalDate.parse("2019-12-27"))
                            .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .doingBusinessAsNames(listOf("string"))
                            .email("string")
                            .firstName("string")
                            .identifications(
                                listOf(
                                    LegalEntityAssociation.AssociatedLegalEntity.Identification
                                        .builder()
                                        .id("182bd5e5-6e1a-4fe4-a799-aa6d9a6ab26e")
                                        .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .discardedAt(
                                            OffsetDateTime.parse("2019-12-27T18:11:19.117Z")
                                        )
                                        .idType(
                                            LegalEntityAssociation.AssociatedLegalEntity
                                                .Identification
                                                .IdType
                                                .AR_CUIL
                                        )
                                        .issuingCountry("string")
                                        .liveMode(true)
                                        .object_("string")
                                        .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                                        .build()
                                )
                            )
                            .lastName("string")
                            .legalEntityType(
                                LegalEntityAssociation.AssociatedLegalEntity.LegalEntityType
                                    .BUSINESS
                            )
                            .legalStructure(
                                LegalEntityAssociation.AssociatedLegalEntity.LegalStructure
                                    .CORPORATION
                            )
                            .liveMode(true)
                            .metadata(
                                LegalEntityAssociation.AssociatedLegalEntity.Metadata.builder()
                                    .build()
                            )
                            .object_("string")
                            .phoneNumbers(
                                listOf(
                                    LegalEntityAssociation.AssociatedLegalEntity.PhoneNumber
                                        .builder()
                                        .phoneNumber("string")
                                        .build()
                                )
                            )
                            .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                            .website("string")
                            .build()
                    )
                    .associatorLegalEntityId("string")
                    .createdAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .discardedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .liveMode(true)
                    .object_("string")
                    .ownershipPercentage(123L)
                    .relationshipTypes(
                        listOf(LegalEntityAssociation.RelationshipType.BENEFICIAL_OWNER)
                    )
                    .title("string")
                    .updatedAt(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
                    .build()
            )
        assertThat(legalEntity.legalEntityType()).contains(LegalEntity.LegalEntityType.BUSINESS)
        assertThat(legalEntity.legalStructure()).contains(LegalEntity.LegalStructure.CORPORATION)
        assertThat(legalEntity.liveMode()).contains(true)
        assertThat(legalEntity.metadata()).contains(LegalEntity.Metadata.builder().build())
        assertThat(legalEntity.object_()).contains("string")
        assertThat(legalEntity.phoneNumbers().get())
            .containsExactly(LegalEntity.PhoneNumber.builder().phoneNumber("string").build())
        assertThat(legalEntity.updatedAt())
            .contains(OffsetDateTime.parse("2019-12-27T18:11:19.117Z"))
        assertThat(legalEntity.website()).contains("string")
    }
}
